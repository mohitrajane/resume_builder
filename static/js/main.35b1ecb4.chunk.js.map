{"version":3,"sources":["action.js","action-type.js","components/Tab.js","components/TabBar.js","components/tabs/Skills.js","components/tabs/Profile.js","components/tabs/EducationItem.js","components/tabs/Education.js","components/tabs/ExperienceItem.js","components/tabs/Experience.js","utils.js","components/Menu.js","components/Viewer.js","App.js","serviceWorker.js","reducers/profile.js","reducers/education.js","reducers/experience.js","reducers/tabs.js","reducers/skills.js","reducers/index.js","store.js","index.js"],"names":["updateProfile","payload","title","type","updateCurrentEducation","updateCurrentExperience","Tab","props","dispatch","useDispatch","currentTab","useSelector","state","tabs","current","className","onClick","event","target","id","tab","TabBar","Row","map","name","key","Skills","dispatcher","skills","items","callback","e","data","detail","tagify","value","skillArray","skill","push","settings","backspace","placeholder","whitelist","dropdown","enabled","callbacks","add","remove","Profile","profile","firstName","undefined","onChange","lastName","addressLine1","addressLine2","addressLine3","phone","email","EducationItem","length","education","noOfItems","toString","useState","item","institution","setInstitution","start","setStart","end","setEnd","degree","setDegree","active","required","Button","variant","Education","itemShow","educationData","selectedEducation","ButtonGroup","aria-label","forEach","ExperienceItem","experience","company","setCompany","designation","setDesignation","description","setDescription","Experience","experienceData","selectedExperience","saveAsPdf","input","document","getElementById","html2canvas","scrollY","window","width","height","scale","then","canvas","image","toDataURL","doc","jsPDF","addImage","save","Date","now","Menu","style","renderTab","Viewer","iconStyle","color","paddingLeft","fontSize","App","Container","Col","lg","Boolean","location","hostname","match","initialState","heading","profileReducer","action","initalState","educationReducer","newState","newArray","slice","Number","updateArray","Array","from","experienceReducer","console","log","tabsReducer","skillReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.35b1ecb4.chunk.js","sourcesContent":["import {UPDATE_PROFILE,UPDATE_CURRENT_TAB,UPDATE_CURRENT_EDUCATION,ADD_EDUCATION,UPDATE_CURRENT_EXPERIENCE,ADD_EXPERIENCE,ADD_SKILL,REMOVE_EDUCATION,REMOVE_EXPERIENCE,UPDATE_EXPERIENCE,UPDATE_EDUCATION} from './action-type';\n\nexport const  updateProfile = (payload, title) =>(\n\n        {type:UPDATE_PROFILE,\n        payload,\n        title}\n);\n\nexport const updateCurrentTab = (payload) =>(\n    {\n        type:UPDATE_CURRENT_TAB,\n        payload\n    }\n);\n\nexport const updateCurrentEducation = (payload) =>(\n    {\n        type:UPDATE_CURRENT_EDUCATION,\n        payload\n    }\n);\n\nexport const updateCurrentExperience = (payload) =>(\n    {\n        type:UPDATE_CURRENT_EXPERIENCE,\n        payload\n    }\n);\nexport const addEducation = (payload) =>(\n    {\n        type:ADD_EDUCATION,\n        payload\n    }\n);\n\nexport const addExperience = (payload) =>(\n    {\n        type:ADD_EXPERIENCE,\n        payload\n    }\n);\n\nexport const addSkill = (payload) =>(\n    {\n        type:ADD_SKILL,\n        payload\n    }\n);\n\nexport const removeEducation = (payload) =>(\n    {\n        type:REMOVE_EDUCATION,\n        payload\n    }\n);\n\nexport const removeExperience = (payload) =>(\n    {\n        type:REMOVE_EXPERIENCE,\n        payload\n    }\n);\n\nexport const updateExperience = (payload) =>(\n    {\n        type:UPDATE_EXPERIENCE,\n        payload\n    }\n);\n\nexport const updateEducation = (payload) =>(\n    {\n        type:UPDATE_EDUCATION,\n        payload\n    }\n);","export const ADD_EDUCATION = \"ADD_EDUCATION\";\nexport const ADD_EXPERIENCE = \"ADD_EXPERIENCE\";\nexport const ADD_SKILL = \"ADD_SKILL\";\nexport const REMOVE_EDUCATION = \"REMOVE_EDUCATION\";\nexport const REMOVE_EXPERIENCE = \"REMOVE_EXPERIENCE\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const UPDATE_CURRENT_TAB = \"UPDATE_CURRENT_TAB\";\nexport const UPDATE_CURRENT_EDUCATION = \"UPDATE_CURRENT_EDUCATION\";\nexport const UPDATE_CURRENT_EXPERIENCE = \"UPDATE_CURRENT_EXPERIENCE\";\nexport const UPDATE_EXPERIENCE = \"UPDATE_EXPERIENCE\";\nexport const UPDATE_EDUCATION = \"UPDATE_EDUCATION\";","import React from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {updateCurrentTab} from '../action';\n\nconst  Tab = (props) => {\n    const dispatch = useDispatch();\n    const currentTab = useSelector(state => state.tabs.current)\n    return(\n        <div className=\"m-1\" onClick={(event) => dispatch(updateCurrentTab(event.target.id))}>\n            {\n                props.id === currentTab?\n                    <span id={props.id} className=\"badge p-2 badge-primary btn mx-1\">{props.tab}</span>\n                    :<span id={props.id} className=\"badge mx-1 p-2 badge-light font-weight-normal\">{props.tab}</span>\n            }\n        </div>\n    );\n};\nexport default Tab;","import React from 'react';\nimport Tab from './Tab';\nimport Row from 'react-bootstrap/Row';\nconst TabBar = (props) => {\n    return(\n        <Row className=\" d-flex mx-auto my-4 col-lg-12\">\n            {props.tabs.map((tab) =>\n            <Tab tab={tab.name} id={tab.key} key={tab.key}  />\n            )}\n        </Row>\n    );\n};\n\nexport default TabBar;","import React from 'react';\nimport Tags from \"@yaireo/tagify/dist/react.tagify\" ;\nimport {useDispatch, useSelector} from 'react-redux';\nimport {addSkill} from '../../action';\n\n// Cant delete items when custom label is added something\nconst Skills = () =>{\n    const dispatcher = useDispatch();\n    const skills = useSelector(state => state.skills.items);\n    const callback = (e) =>{\n        let data = e.detail.tagify.value;\n        let skillArray = [];\n        data.map((skill)=>(skillArray.push(skill.value)))\n        dispatcher(addSkill(skillArray));\n    };\n    let settings={\n        backspace: \"edit\",\n        placeholder: \"Type your skills\",\n        whitelist:[\n            'python',\n            'javascript',\n            'c++',\n            'php',\n            'html',\n            'css',\n            'ruby',\n            'R',\n            'golang'\n        ],\n        dropdown: {\n          enabled: 0 // always show suggestions dropdown\n        },\n        callbacks: {\n            add:callback,\n            remove:callback,\n            \"edit:updated\":callback\n        }\n      };\n    return(\n        <>\n            <Tags\n                settings={settings}\n                value={skills}\n             />\n        </>\n    );\n};\n\nexport default Skills;","import React from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport {updateProfile} from '../../action';\nimport Skills from \"./Skills\";\n\nconst Profile = () =>{\n    const dispatch = useDispatch();\n    const profile = useSelector(state => state.profile);\n    return(\n        <div>\n            <div className=\"d-flex  col-lg-10 mx-auto flex-column\">\n                <div className=\"my-2 d-flex flex-column\">\n                    <span className=\"font-weight-light text-uppercase\">First name</span>\n                    <input type=\"text\" placeholder=\"Jane\" value={profile.firstName?profile.firstName:undefined} onChange={(e) => dispatch(updateProfile(e.target.value,'firstName'))} ></input>\n                </div>\n                <div className=\"my-2 d-flex flex-column\">\n                    <span className=\"font-weight-light text-uppercase\">Last name</span>\n                    <input type=\"text\" placeholder=\"Doe\" value={profile.lastName?profile.lastName:undefined} onChange={(e) => dispatch(updateProfile(e.target.value,'lastName'))}></input>\n                </div>\n            </div>\n            <hr/>\n            <div className=\"d-flex col-lg-10 mx-auto flex-column\">\n                <div className=\"my-2 d-flex flex-column\">\n                    <span className=\"font-weight-light text-uppercase pb-1\">Address Line 1</span>\n                    <input type=\"text\" placeholder=\"House no\" value={profile.addressLine1?profile.addressLine1:undefined} onChange={(e) => dispatch(updateProfile(e.target.value,'addressLine1'))}></input>\n                    </div>\n                <div className=\"my-2 d-flex flex-column\">\n                    <span className=\"font-weight-light text-uppercase pb-1\">Address Line 2</span>\n                    <input type=\"text\" placeholder=\"Lane/location\" value={profile.addressLine2?profile.addressLine2:undefined} onChange={(e) => dispatch(updateProfile(e.target.value,'addressLine2'))}></input>\n                </div>\n                <div className=\"my-2 d-flex flex-column\">\n                    <span className=\"font-weight-light text-uppercase pb-1\">Address Line 3</span>\n                    <input type=\"text\" placeholder=\"City\" value={profile.addressLine3?profile.addressLine3:undefined} onChange={(e) => dispatch(updateProfile(e.target.value,'addressLine3'))}></input>\n                </div>\n            </div>\n            <hr/>\n            <div className=\"d-flex col-lg-10 mx-auto flex-column\">\n                <div className=\"my-2 d-flex flex-column\">\n                    <span className=\"font-weight-light text-uppercase pb-1\">Phone Number</span>\n                    <input type=\"text\" placeholder=\"+91 xxxx xxx xxx\" value={profile.phone?profile.phone:undefined}  onChange={(e) => dispatch(updateProfile(e.target.value,'phone'))}></input>\n                    </div>\n                <div className=\"my-2 d-flex flex-column\">\n                    <span className=\"font-weight-light text-uppercase pb-1\">Email address</span>\n                    <input type=\"text\" placeholder=\"jane.doe@provider.com\" value={profile.email?profile.email:undefined}  onChange={(e) => dispatch(updateProfile(e.target.value,'email'))}></input>\n                </div>\n            </div>\n            <hr/>\n            <div className=\"d-flex col-lg-10 mx-auto flex-column\">\n                <div className=\"my-2 d-flex flex-column\">\n                    <span className=\"font-weight-light text-uppercase pb-1\">Skills</span>\n                    <Skills/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {useSelector,useDispatch} from 'react-redux';\nimport { addEducation, removeEducation, updateEducation } from '../../action';\n\nconst EducationItem = (props) => {\n    const length = useSelector(state => state.education.items.length);\n    const noOfItems = (length === 0) ? '0' :length.toString();\n    const dispatcher = useDispatch();\n    const [institution,setInstitution] = useState(props.item?props.item.institution:'');\n    const [start,setStart] = useState(props.item? props.item.start: '');\n    const [end,setEnd] = useState(props.item?props.item.end : '');\n    const [degree,setDegree] = useState(props.item?props.item.degree: '');\n    const id = useState(props.item?props.item.id: '')[0];\n    const active = useState(props.item?true:false)[0];\n    const renderButton =()=>(\n        active?\n            (\n                <>\n                    <Button variant=\"outline-primary\" onClick={() => dispatcher(updateEducation({\n                        id: id,\n                        institution:institution,\n                        start:start,\n                        end:end,\n                        degree:degree, }))}>\n                        Update Item\n                    </Button>\n                    <Button className=\"ml-2\" variant=\"outline\" \n                        onClick={() =>props.item?\n                            dispatcher(removeEducation(props.item.id))\n                            :undefined\n                        }\n                    >\n                    <span className=\"text-danger\"> Delete Item</span>\n                    </Button>\n                </>\n            )\n            :\n            <Button variant=\"outline-primary\" onClick={() => dispatcher(addEducation({\n                id: noOfItems,\n                institution:institution,\n                start:start,\n                end:end,\n                degree:degree,\n                }))}\n                >Add Item\n            </Button>\n    )\n    return(\n        <>\n                <div className=\"d-flex flex-column\">\n                    <form>\n                        <div className=\"my-2 d-flex col-lg-10 flex-column\">\n                                <span className=\"font-weight-light text-uppercase pb-1\">Institution Name</span>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Good College\"\n                                    value={institution}\n                                    onChange={(e)=>setInstitution(e.target.value)} required>\n                                </input>\n                            </div>\n                            <div className=\"my-2 d-flex col-lg-10 flex-column\">\n                                <span className=\"font-weight-light text-uppercase pb-1\">Start Date</span>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Aug 2016\"\n                                    value={start}\n                                    onChange={(e)=>setStart(e.target.value)}>\n                                </input>\n                            </div>\n                            <div className=\"my-2 d-flex col-lg-10 flex-column\">\n                                <span className=\"font-weight-light text-uppercase pb-1\">End Date</span>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Aug 2020\"\n                                    value={end}\n                                    onChange={(e)=>setEnd(e.target.value)}>\n                                </input>\n                            </div>\n                            <div className=\"my-2 d-flex col-lg-10  flex-column\">\n                                <span className=\"font-weight-light text-uppercase pb-1\">Degree</span>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Good degree\"\n                                    value={degree}\n                                    onChange={(e)=>setDegree(e.target.value)}>\n                                </input>\n                            </div>\n                            <div className=\"mx-3 my-4 col-lg-12\">\n                                {renderButton()}\n                        </div>\n                    </form>\n                </div>\n      </>\n    );\n};\nexport default EducationItem;","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button'\nimport EducationItem from './EducationItem';\nimport {updateCurrentEducation} from \"../../action\";\n\nconst Education = () =>{\n    const educationData = useSelector(state => state.education.items);\n    const selectedEducation = useSelector(state => state.education.current);\n    const dispatcher = useDispatch();\n    let itemShow;\n    const currentItem = () =>{\n        educationData.forEach((item) =>{\n            switch(item.id){\n                    case selectedEducation:\n                        itemShow =item.id;\n                        break;\n                    default:\n                        break;\n            }\n        });\n        if(itemShow !== undefined){\n            return(\n                <div>\n                    <EducationItem key={itemShow} item={educationData[itemShow]}/>\n                </div>\n            );\n        }\n        else{\n            return (\n            <div>\n                <EducationItem/>\n            </div>\n            );\n        }\n    };\n    return(\n        <>\n            <div className=\"d-flex  col-lg-12 mx-auto flex-column\">\n            {\n                educationData.length === 0?\n                    <ButtonGroup className=\"mx-auto my-3\">\n                        <Button key={'0'} variant=\"secondary\" onClick={(e)=>{dispatcher(updateCurrentEducation(e.target.id))}}>New</Button>\n                    </ButtonGroup>\n                :\n                    <ButtonGroup className=\"d-flex \" aria-label=\"Basic example\">\n                    {educationData.map((item)=>(\n                        <>\n                                <Button key={item.id} id={item.id} variant=\"secondary\" onClick={(e)=>{dispatcher(updateCurrentEducation(e.target.id))}}>{item.institution}</Button>\n                        </>\n                    ))}\n                    <Button key={educationData.length+1} id={educationData.length+1}  onClick={(e)=>{dispatcher(updateCurrentEducation(e.target.id))}} variant=\"secondary\">New</Button>\n                    </ButtonGroup>\n            }\n            {currentItem()}\n            </div>\n        </>\n    );\n};\n\nexport default Education;","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport {useSelector,useDispatch} from 'react-redux';\nimport {addExperience, updateExperience, removeExperience} from \"../../action\";\nconst ExperienceItem = (props) =>{\n    const length = useSelector(state => state.experience.items.length);\n    const noOfItems = (length === 0) ? '0' :length.toString();\n    const dispatcher = useDispatch();\n    const [company,setCompany] = useState(props.item?props.item.company:'');\n    const [start,setStart] = useState(props.item? props.item.start:'');\n    const [end,setEnd] = useState(props.item?props.item.end : '');\n    const [designation, setDesignation] = useState(props.item?props.item.designation: '');\n    const [description, setDescription] = useState(props.item?props.item.description: '');\n    const id = useState(props.item?props.item.id:'')[0];\n    const active = useState(props.item?true:false)[0];\n    const renderButton =()=>(\n        active?\n           <>\n                <Button variant=\"outline-primary\"\n                    onClick={() => dispatcher(updateExperience({\n                        key:id,\n                        id: id,\n                        company:company,\n                        start:start,\n                        end:end,\n                        designation:designation,\n                        description:description\n                        }))}\n                    >Update Item\n                </Button>\n                <Button className=\"ml-2\" variant=\"outline\" onClick={\n                    () =>dispatcher(removeExperience(props.item.id))}\n                >\n                <span className=\"text-danger\"> Delete Item</span>\n                </Button>\n           </>\n            :\n            <Button variant=\"outline-primary\"\n                onClick={() => dispatcher(addExperience({\n                    key:noOfItems,\n                    id: noOfItems,\n                    company:company,\n                    start:start,\n                    end:end,\n                    designation:designation,\n                    description:description\n                }))}\n                >Add Item\n            </Button>\n    );\n    return(\n       <>\n            <div className=\"d-flex flex-column\">\n                <form>\n                    <div className=\"my-2 d-flex col-lg-10 flex-column\">\n                        <span className=\"font-weight-light text-uppercase pb-1\">Company Name</span>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Good Company\"\n                            value={company}\n                            onChange={(e)=>setCompany(e.target.value)}>\n                        </input>\n                    </div>\n                    <div className=\"my-2 d-flex col-lg-10 flex-column\">\n                        <span className=\"font-weight-light text-uppercase pb-1\">Start Date</span>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Jan 20xx\"\n                            value={start}\n                            onChange={(e)=>setStart(e.target.value)}>\n                        </input>\n                    </div>\n                    <div className=\"my-2 d-flex col-lg-10 flex-column\">\n                        <span className=\"font-weight-light text-uppercase pb-1\">End Date</span>\n                        <input\n                            type=\"text\"\n                            placeholder=\"June 20xx\"\n                            value={end}\n                            onChange={(e)=>setEnd(e.target.value)}>\n                        </input>\n                    </div>\n                    <div className=\"my-2 d-flex col-lg-10 flex-column\">\n                        <span className=\"font-weight-light text-uppercase pb-1\">Designation</span>\n                        <input\n                            type=\"text\"\n                            placeholder=\"position\"\n                            value={designation}\n                            onChange={(e)=>setDesignation(e.target.value)}>\n                        </input>\n                    </div>\n                    <div className=\"my-2 d-flex col-lg-10 flex-column\">\n                        <span className=\"font-weight-light text-uppercase pb-1\">Description</span>\n                        <textarea\n                            type=\"text\"\n                            value={description}\n                            onChange={(e)=>setDescription(e.target.value)}>\n                        </textarea>\n                    </div>\n                </form>\n            </div>\n        <div className=\"mx-3 my-4 col-lg-12\">\n            {renderButton()}\n        </div>\n       </>\n    );\n};\n\nexport default ExperienceItem;","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport ExperienceItem from './ExperienceItem';\nimport { updateCurrentExperience } from '../../action';\n\nconst Experience = () =>{\n    const experienceData = useSelector(state => state.experience.items);\n    const selectedExperience = useSelector(state => state.experience.current);\n    const dispatcher = useDispatch();\n    let itemShow;\n    const currentItem = () =>{\n        //NEED refactoring \n        experienceData.forEach((item) =>{\n            switch(item.id){\n                    case selectedExperience:\n                        itemShow =item.id;\n                        //Not working when retuened here\n                        break;\n                    default:\n                        break;\n            }\n        });\n        if(itemShow !== undefined){\n            return(\n                <>\n                    <ExperienceItem key={itemShow} item={experienceData[itemShow]}/>\n                </>\n            );\n        }\n        else{\n            return <ExperienceItem key={0}/>;\n        }\n    };\n    return(\n        <div className=\"d-flex  col-lg-12 mx-auto flex-column\">\n            {\n                experienceData.length === 0?\n                    <ButtonGroup className=\"mx-auto my-3\">\n                        <Button key={'0'} variant=\"secondary\" \n                            onClick={(e)=>{dispatcher(updateCurrentExperience(e.target.id))}}\n                        >New</Button>\n                    </ButtonGroup>\n                    :\n                    <ButtonGroup className=\"d-flex\" aria-label=\"Basic example\">\n                    {experienceData.map((item)=>(\n                        <>\n                                <Button key={item.id} id={item.id} variant=\"secondary\" onClick={(e)=>{dispatcher(updateCurrentExperience(e.target.id))}}>{item.company}</Button>\n                        </>\n                    ))}\n                    <Button key={experienceData.length+1} id={experienceData.length+1}  onClick={(e)=>{dispatcher(updateCurrentExperience(e.target.id))}} variant=\"secondary\">New</Button>\n                    </ButtonGroup>\n            }\n           {currentItem()}\n        </div>\n    );\n};\n\nexport default Experience;","import * as jsPDF from 'jspdf';\nimport * as html2canvas from 'html2canvas';\n\nexport const saveAsPdf = () =>{\n  /**\n   Generates Image of div resume using html2canvas and then to pdf using jsPDF in a4 size\n   */\n    var input = document.getElementById('resume');\n    html2canvas(input, {\n      // useCORS: true,\n      // allowTaint: true,\n      scrollY: -window.scrollY,\n      width:2480,\n      height:3508,\n      scale:1\n    }).then(canvas => {\n      const image = canvas.toDataURL('image/jpeg');\n      const doc = new jsPDF({});\n        doc.addImage(image, 'JPEG',0,0,);\n        doc.save(`resume_${Date.now()}.pdf`);\n    });\n};","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport TabBar from './TabBar';\nimport Profile from \"./tabs/Profile\";\nimport Education from \"./tabs/Education\";\nimport Experience from \"./tabs/Experience\";\nimport Skills from \"./tabs/Skills\";\nimport {saveAsPdf} from \"../utils.js\"\n\nconst Menu = () =>{\n    const tabs = useSelector(state => state.tabs.items);\n    const currentTab = useSelector(state => state.tabs.current);\n    const renderTab = () =>{\n        switch(currentTab){\n            case 'profile':\n                return <Profile />\n            case 'education':\n                return <Education/>\n            case 'experience':\n                return <Experience/>\n            case 'skills':\n                return <Skills/>\n            default:\n                return null;\n        }\n    };\n    return(\n        <div className=\"min-vh-100 sticky-top\" style={{'minWidth':'25%'}}>\n                <TabBar currentTab={currentTab} tabs={tabs}/>\n                <div className=\"min-vh-100 d-flex flex-column\">\n                    {renderTab()}\n                    <Button\n                        className=\"sticky-top w-75 mx-auto m-5\" onClick={saveAsPdf}\n                        >Generate PDF\n                    </Button>\n                </div>\n        </div>\n    )\n}\n\nexport default Menu;","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {MdLocalPhone,MdEmail} from 'react-icons/md';\nconst Viewer = ()=>{\n    const a4Style ={\n        width: \"21cm\",\n        height: \"29.6cm\",\n    };\n    const iconStyle ={\n        color:'#007bff',\n        paddingLeft:'1rem'\n    };\n    const profile = useSelector(state => state.profile);\n    const education = useSelector(state =>state.education.items);\n    const experience = useSelector(state => state.experience.items);\n    const skills = useSelector(state => state.skills.items);\n\n    return(\n        <div className=\"min-vh-100 w-100\">\n            <div id=\"resume\" style={a4Style} className=\"shadow mx-auto my-5 p-5\">\n                <div id=\"profile\" className=\"d-flex\">\n                    <div className=\"w-75\">\n                        <h1 className=\"text-primary\">{profile.firstName+' '+profile.lastName}</h1>\n                        <div className=\"d-flex flex-column w-75\">\n                            <span className=\"font-weight-light\">{profile.addressLine1}</span>\n                            <span className=\"font-weight-light\">{profile.addressLine2}</span>\n                            <span className=\"font-weight-light\">{profile.addressLine3}</span>\n                        </div>\n                    </div>\n                    <div className=\"flex-shrink-0 my-auto\">\n                        <p>\n                            {profile.phone?(<MdLocalPhone style={iconStyle}/>):''}\n                            {profile.phone}\n                        </p>\n                        <p>\n                            {profile.email?(<MdEmail style={iconStyle}/>):''}\n                            {profile.email}\n                        </p>\n                    </div>\n                </div>\n                {experience.length?\n                    <>\n                        <hr/>\n                        <h6 className=\"p-2 text-primary\">Work Experience</h6>\n                        <div id=\"experience\" className=\"d-flex flex-column\">\n                            {experience.map((item)=>(\n                                <div>\n                                    <div className=\"d-flex w-100 px-4 pt-4 pb-0\">\n                                        <div className=\"w-100\" key={item.id}>\n                                            <h5 className=\"mb-0\">{item.company}</h5>\n                                            <span className=\"font-weight-light\" style={{fontSize:'0.75rem'}}>{item.designation}</span>\n                                        </div>\n                                        <div className=\"flex-shrink-0\">\n                                            <p className=\"font-weight-light\" style={{fontSize:'0.75rem'}}>{item.start} - {item.end}</p>\n                                        </div>\n                                    </div>\n                                    <span className=\"d-flex w-75 px-4\">\n                                        {item.description}\n                                    </span>\n                                </div>\n                            ))}\n                        </div>\n                    </>\n                : ''\n                }\n                {education.length?\n                    <>\n                        <hr/>\n                        <h6 className=\"p-2 text-primary\">Education</h6>\n                        <div id=\"education\" className=\"d-flex flex-column\">\n                            {education.map((item)=>(\n                                <div className=\"d-flex w-100 p-4\">\n                                    <div className=\"w-100\" key={item.id}>\n                                    <h5 className=\"mb-0\">{item.institution}</h5>\n                                    <span className=\"font-weight-light\" style={{fontSize:'0.75rem'}}>{item.degree}</span>\n                                    </div>\n                                    <div className=\"flex-shrink-0\">\n                                    <p className=\"font-weight-light\" style={{fontSize:'0.75rem'}}>{item.start} - {item.end}</p>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </>\n                    : ''\n                }\n                {skills.length?\n                    <>\n                        <hr/>\n                        <h6 className=\"p-2 text-primary\">Skills</h6>\n                        <div id=\"skills\" className=\"d-flex\">\n                            {skills.map((item)=>(\n                                <p className=\"badge badge-primary mx-2\">\n                                    {item}\n                                </p>\n                            ))}\n                        </div>\n                    </>\n                    : ''\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Viewer;","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Menu from  './components/Menu';\nimport Viewer from './components/Viewer';\n\nconst  App = () => (\n      <Container className='m-0 p-0 w-100' style={{'minWidth':\"100vw\"}}>\n        <Row className=\"m-0\">\n          <Col lg={3} className='p-0 shadow'><Menu/></Col>\n          <Col lg={9} className='p-0'><Viewer/></Col>\n        </Row>\n      </Container>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {UPDATE_PROFILE} from '../action-type';\n\nconst initialState ={\n    heading :'profile',\n    firstName: '',\n    lastName: '',\n    addressLine1 : '',\n    addressLine2: '',\n    addressLine3:'',\n    phone:'',\n    email:''\n};\n\nconst profileReducer = (state= initialState, action) =>{\n    switch(action.type){\n       case UPDATE_PROFILE:\n            let newState;\n           let title = action.title;\n           newState = {...state,\n               [title]:action.payload\n           }\n           return newState;\n        default:\n            return state;\n    };\n};\n\nexport default profileReducer;","import {ADD_EDUCATION,UPDATE_CURRENT_EDUCATION,REMOVE_EDUCATION,UPDATE_EDUCATION } from '../action-type';\n\nconst initalState = {\n    heading:'education',\n        current:'0',\n        items:[]\n};\n\nconst educationReducer = (state = initalState, action) => {\n    let newState;\n    switch(action.type){\n        case ADD_EDUCATION:\n            newState ={\n                ...state,\n                current:action.payload.id,\n                items:[\n                    ...state.items,\n                    action.payload\n                ]\n            };\n            return newState;\n        case UPDATE_CURRENT_EDUCATION:\n            newState = {...state,\n                current:action.payload\n            };\n            return newState;\n        case UPDATE_EDUCATION:\n           let newArray = state.items.slice();\n            newArray[Number(action.payload.id)] = action.payload;\n            newState={\n                ...state,\n                items:newArray\n            };\n            return newState;\n        case REMOVE_EDUCATION:\n            // Logic: Remove item and update id of all the following item and update current variable which denotes the current selected item.\n            if (action.payload === '0' && state.items.length ===1){\n                 // Edge cases:Remove when only 1 item is present.\n                newState = {\n                    current:'0',\n                    items:[]\n                }\n            }\n            else{\n                newState={...state,\n                    items:[\n                        ...state.items.slice(0, action.payload),\n                        ...state.items.slice(Number(action.payload) + 1)\n                    ]\n                };\n                // Update id of the following elements\n                let updateArray = Array.from(newState.items);\n                updateArray.forEach((item)=>{\n                    if(item.id >action.payload){\n                        item.id = (Number(item.id) -1).toString()\n                    }});\n                newState ={...newState,\n                    items:updateArray\n                };\n                // Updating current item if required\n                if(newState.current === action.payload)\n                {\n                    if(newState.items.length !==0 ){\n                        newState={\n                            ...newState,\n                            current:newState.items[0].id\n                        };\n                    }\n                    else{\n                        newState={\n                            ...state,\n                            current:'0'\n                        };\n                    }\n                }\n            }\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default educationReducer;","import {ADD_EXPERIENCE,UPDATE_CURRENT_EXPERIENCE,UPDATE_EXPERIENCE,REMOVE_EXPERIENCE } from '../action-type';\n\nconst initialState = {\n    heading:'experience',\n        current:'0',\n        items :[]\n};\n\nconst experienceReducer = (state = initialState, action) =>{\n    let newState;\n    let newArray;\n    switch(action.type){\n        case ADD_EXPERIENCE:\n            newState ={...state,\n                current:action.payload.id,\n                items:[\n                    ...state.items,\n                    action.payload\n                ]\n            };\n            return newState;\n            case REMOVE_EXPERIENCE:\n                // Logic: Remove item and update id of all the following item and update current variable which denotes the current selected item.\n\n                if(action.payload === '0' && state.items.length ===1){\n                    // Edge cases:Remove when only 1 item is present.\n                    newState = {current:'0',\n                        items:[]\n                    }\n                }\n                else{\n                    newState={...state,\n                        items:[\n                            ...state.items.slice(0, action.payload),\n                            ...state.items.slice(Number(action.payload) + 1)\n                        ]\n                    };\n                    // Update id of the following elements\n                    let updateArray = Array.from(newState.items);\n                    updateArray.forEach((item)=>{\n                        if(item.id >action.payload){\n                            item.id = (Number(item.id) -1).toString()\n                        }});\n                    newState ={...newState,\n                        items:updateArray\n                    };\n                    // Updating current item if required\n                    if(newState.current === action.payload)\n                    {\n                        if(newState.items.length !==0 ){\n                        newState={\n                            ...newState,\n                            current:newState.items[0].id\n                        }}\n                        else{\n                            newState={\n                                ...state,\n                                current:'0'\n                            }\n                        }\n                    }\n                }\n                return newState;\n            case UPDATE_EXPERIENCE:\n                newArray = state.items.slice();\n                newArray[Number(action.payload.id)] = action.payload;\n                newState={\n                    ...state,\n                    items:newArray\n                };\n                console.log(newState);\n                return newState;\n            case UPDATE_CURRENT_EXPERIENCE:\n                newState = {\n                    ...state,\n                    current:action.payload\n                };\n                return newState;\n        default:\n            return state;\n    }\n};\n\nexport default experienceReducer;","import {UPDATE_CURRENT_TAB} from \"../action-type\";\nconst initialState = {\n    current:'profile',\n        items :[\n            {\n                key:'profile',\n                name:'Profile'\n            },\n            {\n                key:'education',\n                name:'Education'\n            },\n            {\n                key:'experience',\n                name:'Experience'\n            }\n        ]\n};\n\nconst tabsReducer = (state = initialState, action) =>{\n        switch(action.type){\n            case UPDATE_CURRENT_TAB:\n                let newState ={...state,\n                    current:action.payload\n                };\n                return newState;\n            default:\n                return state;\n        }\n};\n\nexport default tabsReducer;","import {ADD_SKILL} from \"../action-type\";\nconst initialState={\n    heading:'skills',\n    items:[]\n};\n\nconst skillReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case ADD_SKILL:\n            let newState ={\n                ...state,\n                items:action.payload\n            };\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default skillReducer;","import {combineReducers} from 'redux';\nimport profileReducer from \"./profile\";\nimport educationReducer from \"./education\";\nimport experienceReducer from \"./experience\";\nimport tabsReducer from \"./tabs\";\nimport skillReducer from \"./skills\";\n\nconst rootReducer  = combineReducers({\n    profile:profileReducer,\n    education:educationReducer,\n    experience:experienceReducer,\n    tabs:tabsReducer,\n    skills:skillReducer\n});\n\nexport default rootReducer;\n","import {createStore} from 'redux';\nimport rootReducer from \"./reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nwindow.store = store; // for debug\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}